ggplot(aes(x = price), data = diamonds) +
geom_histogram(aes(fill = cut)) +
scale_fill_brewer(type = 'qual') +
scale_x_log10() +
facet_wrap(~color)
names(diamonds)
head(diamonds$table)
ggplot(aes(X = price, y = table), data = diamonds) +
geom_point()
ggplot(aes(x = price, y = table), data = diamonds) +
geom_point()
ggplot(aes(x = price, y = table), data = diamonds) +
geom_point(aes(color = cut))
ggplot(aes(x = price, y = table), data = diamonds) +
geom_point(aes(color = cut)) +
scale_fill_brewer(type = 'qual')
ggplot(aes(x = price, y = table), data = diamonds) +
geom_point(aes(fill = cut)) +
scale_fill_brewer(type = 'qual')
ggplot(aes(x = price, y = table), data = diamonds) +
geom_point(aes(color = cut)) +
scale_fill_brewer(type = 'qual')
ggplot(aes(x = price, y = table), data = diamonds) +
geom_point(aes(color = cut))
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(color = cut)) +
scale_fill_brewer(type = 'qual')
ggplot(aes(x = tenure, y = friendships_initiated / tenure), data = subset(pf, tenure > 0))  +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = mean)
ggplot(aes(x = tenure, y = friendships_initiated / tenure), data = subset(pf, tenure > 0))  +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = mean)
pf = read.csv("pseudo_facebook.tsv", sep="\t")
library(dplyr)
pf.fc_by_age_gender = pf %>%
filter(!is.na(gender) & !is.na(age)) %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n())
ungroup(pf.fc_by_age_gender)
ggplot(aes(x = age, y = median_friend_count), data = pf.fc_by_age_gender) +
geom_line(aes(color = gender))
library(tidyr)
pf.fc_by_age_gender_wide = pf.fc_by_age_gender %>%
select(age, gender, median_friend_count) %>%
spread(gender, median_friend_count)
head(pf.fc_by_age_gender_wide)
library(ggplot2)
ggplot(aes(x = age, y = female/male), data = pf.fc_by_age_gender_wide) +
geom_line() +
geom_hline(yintercept = 1, linetype = 2) +
geom_smooth()
pf$year_joined = (2014 - ceiling(pf$tenure / 365))
head(pf$year_joined)
pf$year_joined.bucket = cut(pf$year_joined, c(2004, 2009, 2011,2012, 2014))
ggplot(aes(x = age, y = friend_count), data = subset(pf, !is.na(year_joined.bucket)) ) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median) +
geom_smooth()
ggplot(aes(x = age, y = friend_count), data = subset(pf, !is.na(year_joined.bucket)) ) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = mean, linetype = 2)
tmp = subset(pf, tenure != 0)
rate = tmp$friend_count / tmp$tenure
summary(rate)
summary(pf$friendships_initiated / pf$tenure)
table(pf$friendships_initiated / pf$tenure)
ggplot(aes(x = tenure, y = friendships_initiated / tenure), data = subset(pf, tenure > 0))  +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = mean)
ggplot(aes(x = tenure, y = friendships_initiated / tenure), data = subset(pf, tenure > 0))  +
geom_smooth(aes(color = year_joined.bucket))
ggplot(aes(x = tenure, y = friendships_initiated / tenure), data = subset(pf, tenure > 0))  +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = mean)
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(color = cut)) +
scale_fill_brewer(type = 'qual')
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(color = cut)) +
scale_fill_brewer(type = 'qual') +
xlim(c(0, 90))
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(color = cut)) +
scale_fill_brewer(type = 'qual') +
xlim(c(50, 90))
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(color = cut)) +
scale_fill_brewer(type = 'qual') +
xlim(c(50, 70))
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(color = cut)) +
scale_fill_brewer(type = 'qual') +
xlim(c(qunatile(diamonds$table, .25), qunatile(diamonds$table, .75)))
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(color = cut)) +
scale_fill_brewer(type = 'qual') +
xlim(c(quantile(diamonds$table, .25), quantile(diamonds$table, .75)))
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(color = cut)) +
scale_fill_brewer(color = cut, type = 'qual') +
xlim(c(quantile(diamonds$table, .25), quantile(diamonds$table, .75)))
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point() +
scale_fill_brewer(color = cut, type = 'qual') +
xlim(c(quantile(diamonds$table, .25), quantile(diamonds$table, .75)))
?scale_fill_brewer
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point() +
scale_color_brewer(color = cut, type = 'qual') +
xlim(c(quantile(diamonds$table, .25), quantile(diamonds$table, .75)))
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(color = cut)) +
scale_color_brewer(type = 'qual') +
xlim(c(quantile(diamonds$table, .25), quantile(diamonds$table, .75)))
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(color = cut)) +
scale_color_brewer(type = 'qual')
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(color = cut)) +
scale_color_brewer(type = 'qual') +
scale_x_continuous(breaks = seq(50, 80, 2), xlim = c(50, 80))
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(color = cut)) +
scale_color_brewer(type = 'qual') +
scale_x_continuous(breaks = seq(50, 80, 2)) +
xlim(c(50, 80))
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(color = cut)) +
scale_color_brewer(type = 'qual') +
scale_x_continuous(breaks = seq(50, 80, 2)) +
xlim(c(50, 80))
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(color = cut)) +
scale_color_brewer(type = 'qual')
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(color = cut)) +
scale_color_brewer(breaks = seq(50, 80, 2), type = 'qual')
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(color = cut)) +
scale_color_brewer(breaks = seq(50, 80, 2), type = 'qual') +
xlim(c(50, 80))
?scale_color_brewer
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(color = cut)) +
scale_color_brewer(breaks = seq(50, 80, 2), type = 'qual') +
xlim(c(50, 80))
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(color = cut)) +
scale_color_brewer(type = 'qual', breaks = seq(0, 100, 5)) +
xlim(c(50, 80))
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(color = cut)) +
scale_color_brewer(type = 'qual') +
scale_x_discrete(breaks = seq(50, 80, 2)) +
xlim(c(50, 80))
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(color = cut)) +
scale_color_brewer(type = 'qual') +
scale_x_continuous(breaks = seq(50, 80, 2)) +
xlim(c(50, 80))
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(color = cut)) +
scale_x_continuous(breaks = seq(50, 80, 2)) +
scale_color_brewer(type = 'qual') +
xlim(c(50, 80))
?goem_point
>geom_point()
?>geom_point
?geom_point
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(color = cut)) +
scale_color_brewer(type = 'qual') +
xlim(c(50, 80))
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(color = cut)) +
scale_color_brewer(type = 'qual') +
scale_x_continuous(seq(0, 50, 2))
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(color = cut)) +
scale_color_brewer(type = 'qual') +
scale_x_continuous(breaks = seq(0, 50, 2))
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(color = cut)) +
scale_color_brewer(type = 'qual') +
scale_x_continuous(breaks = seq(50, 90, 2))
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(color = cut)) +
scale_color_brewer(type = 'qual') +
scale_x_continuous(breaks = seq(50, 90, 2), xlim = c(50, 90))
?scale_x_continuous
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(color = cut)) +
scale_color_brewer(type = 'qual') +
scale_x_continuous(breaks = seq(50, 90, 2)) +
xlim(c(50, 90))
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(color = cut)) +
scale_color_brewer(type = 'qual') +
scale_x_continuous(breaks = seq(50, 90, 2)) +
xlim(50, 90)
ggplot(aes(x = table, y = price), data = diamonds) +
geom_point(aes(color = cut)) +
scale_color_brewer(type = 'qual') +
scale_x_continuous(breaks = seq(50, 90, 2), limits = c(50, 90))
ggplot(aes(x = table, y = price), data = subset(diamonds, cut = 'ideal') ) +
geom_point(aes(color = cut)) +
scale_color_brewer(type = 'qual') +
scale_x_continuous(breaks = seq(50, 90, 2), limits = c(50, 90))
ggplot(aes(x = table, y = price), data = subset(diamonds, cut = 'Ideal') ) +
geom_point(aes(color = cut)) +
scale_color_brewer(type = 'qual') +
scale_x_continuous(breaks = seq(50, 90, 2), limits = c(50, 90))
ggplot(aes(x = table, y = price), data = subset(diamonds, table = 'Ideal') ) +
geom_point(aes(color = cut)) +
scale_color_brewer(type = 'qual') +
scale_x_continuous(breaks = seq(50, 90, 2), limits = c(50, 90))
ggplot(aes(x = table, y = price), data = subset(diamonds, cut = 'Ideal') ) +
geom_point(aes(color = cut)) +
scale_color_brewer(type = 'qual') +
scale_x_continuous(breaks = seq(50, 90, 2), limits = c(50, 90))
ggplot(aes(x = table, y = price), data = subset(diamonds, cut == 'Ideal') ) +
geom_point(aes(color = cut)) +
scale_color_brewer(type = 'qual') +
scale_x_continuous(breaks = seq(50, 90, 2), limits = c(50, 90))
summary(daimonds)
summary(diamonds)
ggplot(aes(x = table, y = price), data = subset(diamonds, cut == 'Premium') ) +
geom_point(aes(color = cut)) +
scale_color_brewer(type = 'qual') +
scale_x_continuous(breaks = seq(50, 90, 2), limits = c(50, 90))
ggplot(aes(x = table, y = price), data = subset(diamonds, cut == 'Ideal') ) +
geom_point(aes(color = cut)) +
scale_color_brewer(type = 'qual') +
scale_x_continuous(breaks = seq(50, 90, 2), limits = c(50, 90))
by(diamonds$table, diamonds$cut, summary)
diamonds$volume = diamonds$x * diamonds$y * diamonds$z
hea(diamonds)
head(diamonds)
ggplot(aes(x = price, y = volume), data = diamonds) +
geom_point(aes(color = clarity)) +
scale_y_log10()
ggplot(aes(x = price, y = volume), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = clarity)) +
scale_y_log10()
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = clarity)) +
scale_y_log10()
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = clarity)) +
scale_y_log10()
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = clarity)) +
scale_y_log10() +
ylim(1,max(volume))
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = clarity)) +
scale_y_log10() +
xlim(1,max(volume))
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = clarity)) +
scale_y_log10() +
xlim( c(1,max(volume)) )
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = clarity)) +
scale_y_log10() +
xlim(c(1,max(diamonds$volume)))
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = clarity)) +
scale_y_log10() +
xlim(c(1,quantile(diamonds$volume, .9)))
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = clarity)) +
scale_y_log10() +
scale_x_continuous(breaks = seq(0, quantile(diamonds$volume, .9), 100))
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = clarity)) +
scale_color_brewer() +
scale_y_log10() +
scale_x_continuous(breaks = seq(0, quantile(diamonds$volume, .9), 100))
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = clarity)) +
scale_color_brewer(type = 'qual') +
scale_y_log10() +
scale_x_continuous(breaks = seq(0, quantile(diamonds$volume, .9), 100))
?scale_color_brewer
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = clarity)) +
scale_color_brewer(type = 'qual') +
scale_y_log10() +
scale_x_continuous(breaks = seq(0, quantile(diamonds$volume, .9), 100))
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = clarity)) +
scale_color_brewer() +
scale_y_log10() +
scale_x_continuous(breaks = seq(0, quantile(diamonds$volume, .9), 100))
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = clarity)) +
scale_y_log10() +
scale_x_continuous(breaks = seq(0, quantile(diamonds$volume, .9), 100))
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = clarity)) +
scale_color_brewer(type = 'div') +
scale_y_log10() +
scale_x_continuous(breaks = seq(0, quantile(diamonds$volume, .9), 100))
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = clarity)) +
scale_color_brewer(type = 'div') +
scale_y_log10() +
scale_x_continuous(breaks = seq(quantile(diamonds$volume, .1), quantile(diamonds$volume, .9), 100))
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = clarity)) +
scale_color_brewer(type = 'div') +
scale_y_log10()
str(diamonds)
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = as.ordered(clarity) )) +
scale_color_brewer(type = 'div') +
scale_y_log10()
?ordered
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = ordered(clarity) )) +
scale_color_brewer(type = 'div') +
scale_y_log10()
?diamonds
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = reverse(clarity) )) +
scale_color_brewer(type = 'div') +
scale_y_log10()
reverse
?reverse
ordered(diamonds$clarity)
levels(diamonds$clarity)
relevel(diamonds$clarity)
relevel(diamonds$clarity, 'IF')
relevel(factor(diamonds$clarity), 'IF')
factor(diamonds$clarity)
levels(factor(diamonds$clarity))
relevel(levels(diamonds$clarity), 'IF')
levels(factor(diamonds$clarity))
levels((diamonds$clarity))
ordered(levels(diamonds$clarity))
ordered(levels(diamonds$clarity), 'IF')
reorder(diamonds$clarity)
levels((diamonds$clarity))
reorder(diamonds$clarity)
diamonds$clarity = factor(diamonds$clarity, c("IF", "VVS1", "VVS2", "VS1", "VS2", "SI1", "SI2", "I1"))
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = reverse(clarity) )) +
scale_color_brewer(type = 'div') +
scale_y_log10()
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = reverse(clarity) )) +
scale_color_brewer(type = 'div') +
scale_y_log10()
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = (clarity) )) +
scale_color_brewer(type = 'div') +
scale_y_log10()
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = (clarity) )) +
scale_color_brewer(type = 'div') +
scale_y_log10() +
scale_y_continuous(limits = c(1, qunatile(diamonds, .9)))
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = (clarity) )) +
scale_color_brewer(type = 'div') +
scale_y_log10() +
scale_y_continuous(limits = c(1, quantile(diamonds, .9)))
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = clarity )) +
scale_color_brewer(type = 'div') +
scale_y_log10() +
scale_y_continuous(limits = c(1, quantile(diamonds, .9)))
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = clarity )) +
scale_color_brewer(type = 'div') +
scale_y_log10() +
scale_y_continuous(limits = c(1, quantile(diamonds$volume, .9)))
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = clarity )) +
scale_color_brewer(type = 'div') +
scale_y_log10() +
scale_x_continuous(limits = c(1, quantile(diamonds$volume, .9)))
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = clarity )) +
scale_color_brewer(type = 'div', direction = -1) +
scale_y_log10() +
scale_x_continuous(limits = c(1, quantile(diamonds$volume, .9)))
?aes
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = clarity ,level = -1)) +
scale_color_brewer(type = 'div', direction = -1) +
scale_y_log10() +
scale_x_continuous(limits = c(1, quantile(diamonds$volume, .9)))
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = clarity, order = 'desc')) +
scale_color_brewer(type = 'div', direction = -1) +
scale_y_log10() +
scale_x_continuous(limits = c(1, quantile(diamonds$volume, .9)))
ggplot(aes(x = volume, y = price), data = subset(diamonds, volume < quantile(diamonds$volume, .9))) +
geom_point(aes(color = clarity)) +
scale_color_brewer(type = 'div', direction = -1) +
scale_y_log10() +
scale_x_continuous(limits = c(1, quantile(diamonds$volume, .9)))
library(dplyr)
pf
str(pf)
pf$prop_initiated = (pf$friendships_initiated / pf$friend_count) * 100
head(pf$prop_initiated)
head(pf$prop_initiated, 200)
pf = subset(pf, pf$friend_count != 0)
pf$prop_initiated = (pf$friendships_initiated / pf$friend_count) * 100
head(pf$prop_initiated, 200)
summary(pf$prop_initiated)
table(pf$prop_initiated)
?ifelse
pf = read.csv("pseudo_facebook.tsv", sep="\t")
library(dplyr)
pf.fc_by_age_gender = pf %>%
filter(!is.na(gender) & !is.na(age)) %>%
group_by(age, gender) %>%
summarise(mean_friend_count = mean(friend_count),
median_friend_count = median(friend_count),
n = n())
ungroup(pf.fc_by_age_gender)
ggplot(aes(x = age, y = median_friend_count), data = pf.fc_by_age_gender) +
geom_line(aes(color = gender))
library(tidyr)
pf.fc_by_age_gender_wide = pf.fc_by_age_gender %>%
select(age, gender, median_friend_count) %>%
spread(gender, median_friend_count)
head(pf.fc_by_age_gender_wide)
library(ggplot2)
ggplot(aes(x = age, y = female/male), data = pf.fc_by_age_gender_wide) +
geom_line() +
geom_hline(yintercept = 1, linetype = 2) +
geom_smooth()
pf$year_joined = (2014 - ceiling(pf$tenure / 365))
head(pf$year_joined)
pf$year_joined.bucket = cut(pf$year_joined, c(2004, 2009, 2011,2012, 2014))
ggplot(aes(x = age, y = friend_count), data = subset(pf, !is.na(year_joined.bucket)) ) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median) +
geom_smooth()
ggplot(aes(x = age, y = friend_count), data = subset(pf, !is.na(year_joined.bucket)) ) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = mean) +
geom_line(stat = 'summary', fun.y = mean, linetype = 2)
tmp = subset(pf, tenure != 0)
rate = tmp$friend_count / tmp$tenure
summary(rate)
summary(pf$friendships_initiated / pf$tenure)
table(pf$friendships_initiated / pf$tenure)
ggplot(aes(x = tenure, y = friendships_initiated / tenure), data = subset(pf, tenure > 0))  +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = mean)
ggplot(aes(x = tenure, y = friendships_initiated / tenure), data = subset(pf, tenure > 0))  +
geom_smooth(aes(color = year_joined.bucket))
ggplot(aes(x = tenure, y = prop_initiated), data = diamonds) +
geom_line(aes(color = year_joined), stat = 'summary', fun.y = median)
ggplot(aes(x = tenure, y = prop_initiated), data = diamonds) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)
ggplot(aes(x = tenure, y = prop_initiated), data = pf) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)
str(pf)
ggplot(aes(x = tenure, y = prop_initiated), data = pf) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)
pf$prop_initiated = ifelse(pf$friend_count != 0, (pf$friendships_initiated / pf$friend_count) * 100, 0)
ggplot(aes(x = tenure, y = prop_initiated), data = pf) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)
ggplot(aes(x = tenure, y = prop_initiated), data = subset(pf, pf$prop_initiated != 0) ) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)
pf$prop_initiated = ifelse(pf$friend_count != 0, (pf$friendships_initiated / pf$friend_count) , 0)
ggplot(aes(x = tenure, y = prop_initiated), data = subset(pf, pf$prop_initiated != 0) ) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median)
ggplot(aes(x = tenure, y = prop_initiated), data = subset(pf, pf$prop_initiated != 0) ) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median) +
geom_smooth()
ggplot(aes(x = tenure, y = prop_initiated), data = subset(pf, pf$prop_initiated != 0) ) +
geom_line(, stat = 'summary', fun.y = median) +
geom_smooth()
ggplot(aes(x = tenure, y = prop_initiated), data = subset(pf, pf$prop_initiated != 0) ) +
geom_line(stat = 'summary', fun.y = median) +
geom_smooth()
?of
?pf
names(pf)
heand(of)
heand(opf)
heand(pf)
head(pf)
ggplot(aes(x = tenure, y = prop_initiated), data = subset(pf, pf$prop_initiated != 0) ) +
geom_line(aes(color = year_joined.bucket), stat = 'summary', fun.y = median) +
geom_smooth()
by(pf$prop_initiated, pf$year_joined.bucket, summary)
by(pf$friend_count, pf$year_joined.bucket, sum)
by(pf$prop_initiated, pf$year_joined.bucket, summary)
by(pf$friend_count, pf$year_joined.bucket, summary)
by(pf$friendships_initiated, pf$year_joined.bucket, summary)
by(pf$friendships_initiated, pf$year_joined.bucket, table)
summary
by(pf$friendships_initiated, pf$year_joined.bucket, summary)
by(pf$friend_count, pf$year_joined.bucket, summary)
ggplot(aes(x = cut, y = price / carat), data = diamonds) +
geom_point(aes(color = color)) +
facet_wrap(~clarity)
ggplot(aes(x = cut, y = price / carat), data = diamonds) +
geom_point(aes(color = color)) +
scale_color_brewer(type = 'div')
ggplot(aes(x = cut, y = price / carat), data = diamonds) +
geom_point(aes(color = color)) +
scale_color_brewer(type = 'div') +
facet_wrap(~clarity)
ggplot(aes(x = cut, y = price / carat), data = diamonds) +
geom_point(aes(color = color), position = position_jitter()) +
scale_color_brewer(type = 'div') +
facet_wrap(~clarity)
